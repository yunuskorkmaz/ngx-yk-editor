{"version":3,"sources":["webpack:///./lib/yk-editor/src/index.ts","webpack:///./lib/yk-editor/src/lib/markdown.directive.ts","webpack:///./lib/yk-editor/src/lib/yk-editor.module.ts","webpack:///./lib/yk-editor/src/lib/ykeditor/ykeditor.component.css","webpack:///./lib/yk-editor/src/lib/ykeditor/ykeditor.component.html","webpack:///./lib/yk-editor/src/lib/ykeditor/ykeditor.component.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/*\n * Public API Surface of yk-md-editor\n */\n\n\nexport * from './lib/yk-editor.module';\nexport * from \"./lib/ykeditor/ykeditor.component\"\nexport * from \"./lib/markdown.directive\"\n","import { Directive, Input, ElementRef, Output, Renderer2, SecurityContext } from '@angular/core';\nimport marked from 'marked';\nimport hljs from \"highlight.js\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport emoji from 'node-emoji'\n\n\n@Directive({\n  selector: '[markdown]'\n})\nexport class MarkdownDirective {\n\n  @Input() set markdowntext(v) {\n    if (v != null && v != this._content) {\n      this._content = v;\n      this.renderMarkdown(this._content);\n    }\n  }\n  @Output() get html() {\n    return this.markedContent;\n  }\n  _content;\n  markedContent: string;\n  renderer = new marked.Renderer();\n\n\n  constructor(private el: ElementRef, private sanitize: DomSanitizer, private render2: Renderer2) {\n    this.markedRenderer();\n    this.renderMarkdown(\"\");\n  }\n\n\n  renderMarkdown(text) {\n    const replacer = (match) => emoji.emojify(match);\n    text = text.replace(/(:.*:)/g, replacer);\n\n    this.markedContent = marked(text);\n\n    this.markedContent = this.sanitize.bypassSecurityTrustHtml(this.markedContent) as string\n\n    this.el.nativeElement.innerHTML = this.sanitize.sanitize(SecurityContext.HTML, this.markedContent);\n\n  }\n\n  markedRenderer() {\n    this.renderer.listitem = (text: any) => {\n      if (/^\\s*\\[[x ]\\]\\s*/.test(text)) {\n        text = text\n          .replace(/^\\s*\\[ \\]\\s*/, '<i class=\"fa fa-square-o\" style=\"margin: 0 0.2em 0.25em -1.6em;\"></i> ')\n          .replace(/^\\s*\\[x\\]\\s*/, '<i class=\"fa fa-check-square\" style=\"margin: 0 0.2em 0.25em -1.6em;\"></i> ');\n        return `<li style=\"list-style: none;\">${text}</li>`;\n      } else {\n        return `<li>${text}</li>`;\n      }\n    };\n    this.renderer.table = (header: string, body: string) => {\n      return `<table class=\"table table-bordered\">\\n<thead>\\n${header}</thead>\\n<tbody>\\n${body}</tbody>\\n</table>\\n`;\n    };\n\n    marked.setOptions({\n      highlight: function (code) {\n        return hljs.highlightAuto(code).value;\n      },\n      renderer: this.renderer,\n      tables: true,\n      sanitize: false,\n      smartLists: true,\n\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { YKEditorComponent } from './ykeditor/ykeditor.component';\nimport { MarkdownDirective } from './markdown.directive';\nimport { CommonModule } from \"@angular/common\";\nimport { AngularResizedEventModule } from 'angular-resize-event';\n@NgModule({\n  imports: [\n    CommonModule,\n    AngularResizedEventModule\n  ],\n  declarations: [ YKEditorComponent, MarkdownDirective],\n  exports: [YKEditorComponent,MarkdownDirective]\n})\nexport class YkEditorModule { }\n","module.exports = \"\"","module.exports = \"<div (resized)=\\\"onResized($event)\\\" class=\\\"main-container\\\" #mainContainer>\\n  <div class=\\\"toolbar\\\">\\n    <div>\\n      <button (click)=\\\"insertContent('undo')\\\">\\n        <i class=\\\"yi undo\\\"></i>\\n      </button>\\n      <button (click)=\\\"insertContent('redo')\\\">\\n        <i class=\\\"yi repeat\\\"></i>\\n      </button>\\n      <span class=\\\"sparator\\\"></span>\\n      <button (click)=\\\"insertContent('bold')\\\">\\n        <i class=\\\"yi bold\\\"></i>\\n      </button>\\n      <button (click)=\\\"insertContent('italic')\\\">\\n        <i class=\\\"yi italic\\\"></i>\\n      </button>\\n\\n      <button (click)=\\\"insertContent('strikethrough')\\\">\\n        <i class=\\\"yi strikethrough\\\"></i>\\n      </button>\\n      <span class=\\\"sparator\\\"></span>\\n      <button (click)=\\\"insertContent('link')\\\">\\n        <i class=\\\"yi link\\\"></i>\\n      </button>\\n      <button (click)=\\\"insertContent('image')\\\">\\n        <i class=\\\"yi picture-o\\\"></i>\\n      </button>\\n      <span class=\\\"sparator\\\"></span>\\n      <button (click)=\\\"insertContent('code')\\\">\\n        <i class=\\\"yi code\\\"></i>\\n      </button>\\n      <button (click)=\\\"insertContent('inline-code')\\\">\\n        <i class=\\\"yi terminal\\\"></i>\\n      </button>\\n      <button (click)=\\\"insertContent('list')\\\">\\n        <i class=\\\"yi list-ul\\\"></i>\\n      </button>\\n      <button (click)=\\\"insertContent('todo-x')\\\">\\n        <i class=\\\"yi check-square-o\\\"></i>\\n      </button>\\n      <button (click)=\\\"insertContent('todo-o')\\\">\\n        <i class=\\\"yi square-o\\\"></i>\\n      </button>\\n      <span class=\\\"sparator\\\"></span>\\n      <button (click)=\\\"changeTheme()\\\">\\n        <i class=\\\"yi\\\" [ngClass]=\\\"{'moon-o': theme, 'sun-o': !theme}\\\"></i>\\n      </button>\\n      <button (click)=\\\"changeLayout('fullscreen')\\\">\\n        <i class=\\\"yi arrows-alt\\\"></i>\\n      </button>\\n    </div>\\n    <div class=\\\"btn-group\\\">\\n      <button (click)=\\\"changeLayout('edit')\\\" [ngClass]=\\\"{'active': displayMode == 'edit'}\\\">\\n        <i class=\\\"yi pencil-square-o\\\"></i>\\n      </button>\\n      <button (click)=\\\"changeLayout('split')\\\" [ngClass]=\\\" {'active': displayMode=='split' }\\\">\\n        <i class=\\\"yi columns\\\"></i>\\n      </button>\\n      <button (click)=\\\"changeLayout('preview')\\\" [ngClass]=\\\"{'active': displayMode == 'preview'}\\\">\\n        <i class=\\\"yi eye\\\"></i>\\n      </button>\\n    </div>\\n\\n  </div>\\n  <div (resized)=\\\"onResized($event)\\\" #resizeContainer class=\\\"editor-container\\\">\\n    <div (resized)=\\\"onResized($event)\\\" class=\\\"editor\\\" #editorContainer>\\n      <div class=\\\"monaco-editor\\\" #editorhost></div>\\n    </div>\\n    <div (resized)=\\\"onResized($event)\\\" class=\\\"preview\\\" #previewContainer [ngClass]=\\\"{'light': theme, 'dark':!theme}\\\">\\n      <div markdown [markdowntext]=\\\"content\\\" class=\\\"rendered-markdown\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild, ElementRef, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\nimport { editor, Selection, languages} from 'monaco-editor';\r\nimport emoji from 'node-emoji'\r\nimport { ResizedEvent } from 'angular-resize-event/resized-event';\r\n\r\n@Component({\r\n  selector: 'yk-editor',\r\n  templateUrl: './ykeditor.component.html',\r\n  styleUrls: ['./ykeditor.component.css']\r\n})\r\nexport class YKEditorComponent implements OnInit, AfterViewInit {\r\n  @Input() get content() {\r\n    return this._content;\r\n  }\r\n\r\n  set content(v) {\r\n    this._content = v;\r\n    this.contentChange.emit(v);\r\n  }\r\n\r\n  @Output() contentChange = new EventEmitter();\r\n\r\n  _content = \"\";\r\n  @ViewChild(\"editorhost\") host: ElementRef;\r\n  @ViewChild(\"editorContainer\") editorContainer: ElementRef;\r\n  @ViewChild(\"previewContainer\") previewContainer: ElementRef;\r\n  @ViewChild('mainContainer') mainContainer: ElementRef;\r\n  @ViewChild(\"resizeContainer\") resizeContainer: ElementRef;\r\n  baseEditor: any;\r\n\r\n  displayMode: string = \"split\";\r\n\r\n  isFullScreen = false;\r\n\r\n  theme: boolean = true;\r\n\r\n  changeTheme() {\r\n    this.theme = !this.theme;\r\n    this.theme == true ? editor.setTheme(\"vs\") : editor.setTheme(\"vs-dark\");\r\n  }\r\n\r\n  changeLayout(type) {\r\n    if (this.displayMode != type || type == \"fullscreen\") {\r\n      this.displayMode = type;\r\n      switch (type) {\r\n        case 'edit':\r\n          this.previewContainer.nativeElement.setAttribute(\"style\", \"display : none\");\r\n          this.editorContainer.nativeElement.setAttribute(\"style\", \"min-width : 100%;max-width : 100%\");\r\n          break;\r\n        case 'preview':\r\n          this.editorContainer.nativeElement.setAttribute(\"style\", \"display : none\");\r\n          this.previewContainer.nativeElement.setAttribute(\"style\", \"min-width : 100%;max-width : 100%\");\r\n          break;\r\n        case 'split':\r\n          this.previewContainer.nativeElement.setAttribute(\"style\", \"\");\r\n          this.editorContainer.nativeElement.setAttribute(\"style\", \"\");\r\n          this.resizeLayout();\r\n          break;\r\n        case 'fullscreen':\r\n\r\n          this.isFullScreen = !this.isFullScreen;\r\n          if (this.isFullScreen == true)\r\n            this.mainContainer.nativeElement.setAttribute('style', \"position: fixed;top: 0px;left: 0;bottom: 0;right: 0;width: 100%;height: 100%;\");\r\n          else\r\n            this.mainContainer.nativeElement.setAttribute('style', \"\");\r\n          break;\r\n      }\r\n      this.baseEditor.layout();\r\n    }\r\n  }\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  config: any = {\r\n\r\n    language: \"markdown\",\r\n    minimap: { enabled: false },\r\n    lineNumbers: \"off\",\r\n    theme: this.theme ? 'vs' : 'vs-dark',\r\n    scrollBeyondLastLine: false,\r\n    wordWrap: 'on',\r\n    glyphMargin: false\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.baseEditor = editor.create(this.host.nativeElement, this.config);\r\n    this.baseEditor.setModel(editor.createModel(this.content, 'markdown'));\r\n    this.baseEditor.onDidChangeModelContent((e) => {\r\n      this.content = this.baseEditor.getValue();\r\n    });\r\n    var emojilist = [];\r\n    for (var k in emoji.emoji) { emojilist.push({ label: k + \" \" + emoji.emoji[k], kind: languages.CompletionItemKind.Function, insertText: k + \":\" }) }\r\n\r\n    languages.registerCompletionItemProvider('markdown', {\r\n      provideCompletionItems: function (model, position) {\r\n        var textUntilPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column - 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        if (textUntilPosition === ':') { return emojilist; } return [];\r\n      },\r\n      triggerCharacters: [':']\r\n    });\r\n\r\n    languages.setLanguageConfiguration('markdown', {\r\n      onEnterRules: [\r\n        {\r\n          beforeText: /^[-]\\s(.*)/,\r\n          action: { appendText: '- ', indentAction: languages.IndentAction.None }\r\n\r\n        }\r\n      ]\r\n    });\r\n    languages.registerCompletionItemProvider('markdown', {\r\n      provideCompletionItems: () => {\r\n        return [\r\n          {\r\n            label: 'h1',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '# ${1:text}'\r\n            }\r\n          },\r\n          {\r\n            label: 'h2',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '## ${1:text}'\r\n            }\r\n          },\r\n          {\r\n            label: 'h3',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '### ${1:text}'\r\n            }\r\n          },\r\n          {\r\n            label: 'h4',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '#### ${1:text}'\r\n            }\r\n          },\r\n          {\r\n            label: 'h5',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '##### ${1:text}'\r\n            }\r\n          },\r\n          {\r\n            label: 'h6',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '###### ${1:text}'\r\n            }\r\n          },\r\n          {\r\n            label: 'code',\r\n            kind: languages.CompletionItemKind.Snippet,\r\n            insertText: {\r\n              value: [\r\n                '```',\r\n                '${1:code}',\r\n                '```',\r\n\r\n              ].join('\\n')\r\n            },\r\n            documentation: 'If-Else Statement'\r\n          },\r\n          {\r\n            label: 'link',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '[${1:linkText}](${2:url})'\r\n            }\r\n          },\r\n          {\r\n            label: 'image',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '![${1:altText}](${2:url})'\r\n            }\r\n          },\r\n          {\r\n            label: 'linkreferance',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '[${1:name}]: ${2:link}'\r\n            }\r\n          },\r\n          {\r\n            label: 'list',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '\\n - ${1:text}'\r\n            }\r\n          },\r\n          {\r\n            label: 'todo un check',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '\\n - [ ] ${2:text}'\r\n            }\r\n          },\r\n\r\n          {\r\n            label: 'todo check',\r\n            kind: languages.CompletionItemKind.Keyword,\r\n            insertText: {\r\n              value: '\\n - [x] ${2:text}'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    });\r\n\r\n    this.baseEditor.updateOptions({\r\n      glyphMargin : false\r\n    });\r\n    \r\n  }\r\n\r\n  charRepeatBasedInsertText(char, aftercharnewLine = false, line = 0) {\r\n    var count = char.trim().length;\r\n    const selection = this.baseEditor.getSelection();\r\n    var text = this.baseEditor.getModel().getValueInRange(selection);\r\n    text.trim();\r\n    var beforeselection = new Selection(selection.selectionStartLineNumber,\r\n      selection.selectionStartColumn - count,\r\n      selection.positionLineNumber,\r\n      selection.positionColumn - text.length);\r\n\r\n    var afterselection = new Selection(selection.selectionStartLineNumber,\r\n      selection.positionColumn,\r\n      selection.positionLineNumber,\r\n      selection.positionColumn + count);\r\n\r\n    var startchar = this.baseEditor.getModel().getValueInRange(beforeselection);\r\n    var endchar = this.baseEditor.getModel().getValueInRange(afterselection);\r\n\r\n\r\n\r\n    if (startchar == char && endchar == char) {\r\n\r\n      this.baseEditor.executeEdits('', [{ range: afterselection, text: '' }]);\r\n      this.baseEditor.executeEdits('', [{ range: beforeselection, text: '' }]);\r\n\r\n    }\r\n    else {\r\n      text = `${aftercharnewLine == true ? '\\n' : ''}${char}${aftercharnewLine == true ? '\\n' : ''}${text}${aftercharnewLine == true ? '\\n' : ''}${char}`;\r\n      this.baseEditor.executeEdits('', [{ range: selection, text: text }]);\r\n\r\n      this.baseEditor.setSelection({\r\n        startColumn: selection.startColumn + (line == 0 ? count : 0),\r\n        endColumn: selection.endColumn + (line == 0 ? count : 0),\r\n        startLineNumber: selection.startLineNumber + line,\r\n        endLineNumber: selection.endLineNumber + line\r\n      });\r\n    }\r\n    this.baseEditor.focus();\r\n  }\r\n  linkBasedInsertText(type) {\r\n    var count = type == \"image\" ? 4 : 3;\r\n    var extrachar = type == \"image\" ? \"!\" : \"\";\r\n    const selection = this.baseEditor.getSelection();\r\n    var text = this.baseEditor.getModel().getValueInRange(selection);\r\n    var newText = `${extrachar}[${text}]()`;\r\n    this.baseEditor.executeEdits('', [{ range: selection, text: newText }]);\r\n    this.baseEditor.setPosition({\r\n      lineNumber: selection.endLineNumber,\r\n      column: selection.endColumn + count\r\n    });\r\n    this.baseEditor.focus();\r\n  }\r\n  listBasedInsertText(type, fill = false) {\r\n    var extra = type == 'todo' ? fill == true ? '[x]' : '[ ]' : '';\r\n    const selection = this.baseEditor.getSelection();\r\n    var text = this.baseEditor.getModel().getValueInRange(selection);\r\n    var newText = `\\n - ${extra} ${text} `;\r\n    this.baseEditor.executeEdits('', [{ range: selection, text: newText }]);\r\n    this.baseEditor.setPosition({\r\n      lineNumber: selection.endLineNumber + 1,\r\n      column: type == 'todo' ? 8 : 4\r\n    });\r\n    this.baseEditor.focus();\r\n  }\r\n\r\n  insertContent(type) {\r\n\r\n\r\n    switch (type) {\r\n      case 'bold':\r\n        this.charRepeatBasedInsertText(\"**\");\r\n        break;\r\n      case 'italic':\r\n        this.charRepeatBasedInsertText(\"*\");\r\n        break;\r\n      case 'strikethrough':\r\n        this.charRepeatBasedInsertText(\"~~\");\r\n        break;\r\n      case 'link':\r\n        this.linkBasedInsertText(\"link\");\r\n        break;\r\n      case 'image':\r\n        this.linkBasedInsertText(\"image\");\r\n        break;\r\n      case 'code':\r\n        this.charRepeatBasedInsertText('```', true, +1);\r\n        break;\r\n      case 'inline-code':\r\n        this.charRepeatBasedInsertText('`');\r\n        break;\r\n      case 'undo':\r\n        this.baseEditor.trigger(\"\", \"undo\", \"\");\r\n        break;\r\n      case 'redo':\r\n        this.baseEditor.trigger('', 'redo', '');\r\n        break;\r\n      case 'list':\r\n        this.listBasedInsertText('link');\r\n        break;\r\n      case 'todo-x':\r\n        this.listBasedInsertText('todo', true);\r\n        break;\r\n      case 'todo-o':\r\n        this.listBasedInsertText('todo', false);\r\n        break;\r\n    }\r\n  }\r\n\r\n  onResized(event: ResizedEvent): void {\r\n    this.baseEditor.layout();\r\n    this.resizeLayout();\r\n   }\r\n  resizeLayout(){\r\n    var witdh = this.resizeContainer.nativeElement.offsetWidth;\r\n     this.editorContainer.nativeElement.style.width = (witdh/2)+\"px\";\r\n     this.previewContainer.nativeElement.style.width = (witdh / 2) + \"px\"\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.resizeLayout();\r\n  }\r\n\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<div style=\\\"width: 80%;height: 500px;margin:0 auto;display: flex\\\">\\n  <yk-editor [(content)]=\\\"value\\\"></yk-editor>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  value = `# An exhibit of Markdown\n\n\n*Note: Feel free to play with this page. Unlike regular notes, this doesn't automatically save itself.*\n\n## Basic formatting\n\nParagraphs can be written like so. A paragraph is the basic block of Markdown. A paragraph is what text will turn into when there is no reason it should become anything else.\n\nParagraphs must be separated by a blank line. Basic formatting of *italics* and **bold** is supported. This *can be **nested** like* so.\n\n## Lists\n\n### Ordered list\n\n1. Item 1\n2. A second item\n3. Number 3\n4. Ⅳ\n\n*Note: the fourth item uses the Unicode character for [Roman numeral four][2].*\n\n### Unordered list\n\n* An item\n* Another item\n* Yet another item\n* And there's more...\n\n## Paragraph modifiers\n\n### Code block\n\n    Code blocks are very useful for developers and other people who look at code or other things that are written in plain text. As you can see, it uses a fixed-width font.\n\nYou can also make`+ `inline code` + `to add code into other things.\n\n### Quote\n\n> Here is a quote. What this is should be self explanatory. Quotes are automatically indented when they are used.\n\n## Headings\n\nThere are six levels of headings. They correspond with the six levels of HTML headings. You've probably noticed them already in the page. Each level down uses one more hash character.\n\n### Headings *can* also contain **formatting**\n`;\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { YkEditorModule } from '../../lib/yk-editor/src/';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    YkEditorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}